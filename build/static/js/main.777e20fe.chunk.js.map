{"version":3,"sources":["api/index.js","components/SearchBar.js","components/Card.js","components/SearchResults.js","components/DeckList.js","index.js"],"names":["fetchCards","a","name","text","axios","get","data","cards","SearchBar","setResults","useState","setName","setText","event","preventDefault","id","onSubmit","type","placeholder","value","onChange","target","Card","manaCost","flavor","imageUrl","addCardToDeck","removeCardFromDeck","className","src","onClick","SearchResults","results","length","map","result","DeckList","deck","cardCount","reduce","card","count","App","setDeck","nextDeck","index","findIndex","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.777e20fe.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport async function fetchCards({ name, text }) {\n  try {\n    const { data } = await axios.get(\n      `https://api.magicthegathering.io/v1/cards?name=${name}&text=${text}`\n    );\n\n    return data.cards || [];\n  } catch (error) {\n    throw error;\n  }\n}\n","import React, { useState } from \"react\";\n\nimport { fetchCards } from \"../api\";\n\nconst SearchBar = ({ setResults }) => {\n  const [name, setName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleTextChange = (event) => {\n    setText(event.target.value);\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const cards = await fetchCards({ name, text });\n    setResults(cards);\n  }\n\n  return (\n    <div id=\"search\">\n      <h3>Look up cards here...</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"card search\"\n          value={name}\n          onChange={handleNameChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"card text\"\n          value={text}\n          onChange={handleTextChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import Reach from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = ({\n  id,\n  name,\n  type,\n  manaCost,\n  text,\n  flavor,\n  imageUrl,\n  addCardToDeck,\n  removeCardFromDeck,\n}) => {\n  return (\n    <div className=\"Card\">\n      <div className=\"info\">\n        <p className=\"header\">\n          {name} - {manaCost}\n        </p>\n        <p className=\"type\">{type}</p>\n        <p className=\"text\">{text}</p>\n        <p className=\"flavor\">{flavor}</p>\n      </div>\n\n      <img className=\"preview\" src={imageUrl} />\n      <div className=\"actions\">\n        <button\n          onClick={() => {\n            addCardToDeck({\n              id,\n              name,\n            });\n          }}\n        >\n          (+) Add to Deck\n        </button>\n        <button\n          onClick={() => {\n            removeCardFromDeck({ id });\n          }}\n        >\n          (-) Remove from Deck\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./SearchResults.css\";\n\nimport Card from \"./Card\";\n\nconst SearchResults = ({ results, addCardToDeck, removeCardFromDeck }) => {\n  return (\n    <div id=\"results\">\n      <h3>Here's what we found ({results.length} results):</h3>\n      <div className=\"CardList\">\n        {results.map((result) => (\n          <Card\n            key={result.id}\n            addCardToDeck={addCardToDeck}\n            removeCardFromDeck={removeCardFromDeck}\n            {...result}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import React from \"react\";\n\nconst DeckList = ({ deck, addCardToDeck, removeCardFromDeck }) => {\n  let cardCount = deck.reduce((cardCount, card) => {\n    return cardCount + card.count;\n  }, 0);\n\n  return (\n    <div id=\"deck\">\n      <h3>Your deck so far ({cardCount} cards):</h3>\n      <div className=\"DeckList\">\n        {deck.map(({ id, name, count }) => (\n          <p key={id}>\n            <span>\n              ({count}x) {name}\n            </span>\n            <br />\n            <button onClick={() => addCardToDeck({ id, name })}> + </button>\n            <button onClick={() => removeCardFromDeck({ id })}> - </button>\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DeckList;\n","// inside src/index.js\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport axios from \"axios\";\n\nimport { DeckList, SearchBar, SearchResults } from \"./components\";\n\nimport { fetchCards } from \"./api\";\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [deck, setDeck] = useState([]);\n\n  const addCardToDeck = ({ id, name }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex((card) => card.id === id);\n\n    //index will be -1 if it is not found\n    if (index > -1) {\n      nextDeck[index].count += 1;\n    } else {\n      nextDeck.push({\n        id,\n        name,\n        count: 1,\n      });\n    }\n    setDeck(nextDeck);\n  };\n\n  const removeCardFromDeck = ({ id }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex((card) => card.id === id);\n\n    if (index === -1) {\n      //don't do anything if we're trying to remove a card not in the deck\n      return;\n    }\n\n    if (nextDeck[index].count === 1) {\n      //remove the card altogether\n      nextDeck.splice(index, 1);\n    } else {\n      //decrement the count\n      nextDeck[index].count -= 1;\n    }\n\n    setDeck(nextDeck);\n  };\n\n  return (\n    <div id=\"app\">\n      <SearchBar setResults={setResults} />\n      <SearchResults\n        results={results}\n        addCardToDeck={addCardToDeck}\n        removeCardFromDeck={removeCardFromDeck}\n      />\n      <DeckList\n        deck={deck}\n        addCardToDeck={addCardToDeck}\n        removeCardFromDeck={removeCardFromDeck}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}